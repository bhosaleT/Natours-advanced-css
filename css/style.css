/* Font */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

/* CSS ANIMATIONS USING KEYFRAMES */
/* Move main heading from left to right */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    opacity: 0.6;
    transform: translateX(10px); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

/* move sub heading from right to left */
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); }
  80% {
    opacity: 0.6;
    transform: translateX(-10px); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    margin-bottom: 60px; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  /* adds line height more then default */
  color: #777777;
  padding: 30px; }

/* adding gradient color to heading
-- add a simple linear gradient as background-image
-- then -webkit-background-clip: as text
-- set the text color as transparent. so we can see the background color through the text
*/
.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  color: transparent;
  -webkit-background-clip: text;
  transform: all 0.2s;
  letter-spacing: 2px; }
  .heading-secondary:hover {
    transform: translateY(-2px) scale(1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.3); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

/* BUTTON AND PSEUDO ELEMENTS */
/* pseudo class link  styling element under a special state*/
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 200px;
  transition: all 0.2s; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4); }

.btn:active {
  transform: translateY(1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4); }

.btn-white {
  background-color: #ffffff;
  color: #777777; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 4px;
  transition: all 0.2s; }

.btn-text:hover {
  transform: translateY(-3px);
  background-color: #55c57a;
  color: white;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4); }

.btn-text:active {
  transform: translateY(0);
  background-color: #55c57a;
  color: white;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4); }

.composition {
  position: relative;
  /* When we hover the composition select the photo which is not hovered */ }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 1.5rem;
    /* The three images have an absolute position realtive to the composition 
     -- the first one i want stuck to the left but little above the container so top of -20px
     -- the second one i want to stuck to the right so right 0 and little below so top of 20px
     -- and the third photo i want at the bottom so top 100px and little to the left.
     -- all of these values are how much away from left right and top.
    */
    /* To make one of the images show above the other we add a z index value to it. */ }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #28b485;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.6);
      z-index: 25; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.header {
  height: 95vh;
  position: relative;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.901), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /* always tries to fit the element inside the box */
  background-position: top;
  /* The top of the image always stays the bottom gets cropped. */
  /* Move in the clockwise direction to check which co-ordinates are moving x or Y */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    /* The top and left 40px are relative to its parent element i.e. the header */
    top: 40px;
    left: 40px; }
  .header__logo {
    height: 35px;
    /* width is done by the browser */ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* To center the button which is just text we are using text-align center here because this is the parent element */
    text-align: center; }

/* Centering stuff in CSS
   position is absolute
   and then just bring it down by 50% and to the left 50% 
   then we want to take in consideration the actual height and width of the object so we transform it to translate -50% 
*/
.row {
  max-width: 114rem;
  margin: 0 auto;
  /* the not pseudo class is used to select everything except the last child. */
  /* Selecting all the columns with attributes 
  [class^= just select begins with.]
  $ ends with.
  */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * (6rem)); }

/* The design page shows a sharp cut in our top header 
it uses clip-path to make that cut at 75vh so we have 20 vh left of white space to fill to do that we will add negative margin to the section-about page we do that using
margin-top: -20vh;
*/
.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
